# Generated by Django 4.0.2 on 2022-12-19 19:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationFormModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True, verbose_name='date')),
                ('phase', models.CharField(max_length=30, null=True, verbose_name='phase')),
                ('block', models.CharField(max_length=30, null=True, verbose_name='block')),
                ('lotno', models.CharField(max_length=30, null=True, verbose_name='lot_no.')),
                ('fullname', models.CharField(max_length=99, null=True, verbose_name='fullname')),
                ('birth', models.DateField(null=True, verbose_name='birth')),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=30, null=True, verbose_name='gender')),
                ('contacts', models.CharField(max_length=11, null=True, verbose_name='contacts')),
                ('address', models.CharField(max_length=99, null=True, verbose_name='address')),
                ('email', models.EmailField(max_length=99, null=True, verbose_name='email')),
            ],
        ),
        migrations.CreateModel(
            name='BookAppointmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=250, null=True, verbose_name='reason')),
                ('fullname', models.CharField(max_length=250, null=True, verbose_name='fullname')),
                ('contacts', models.CharField(max_length=11, null=True, verbose_name='contacts')),
                ('email', models.CharField(max_length=250, null=True, verbose_name='email')),
                ('date', models.DateField(null=True, verbose_name='date')),
            ],
        ),
        migrations.CreateModel(
            name='BuyersFormModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_type', models.CharField(choices=[('Lawn Lot', 'Lawn Lot'), ('Mausoleum', 'Mausoleum'), ('Niche', 'Niche')], max_length=30, null=True, verbose_name='lot_type')),
                ('phase', models.CharField(max_length=30, null=True, verbose_name='phase')),
                ('block', models.CharField(max_length=30, null=True, verbose_name='block')),
                ('lotno', models.CharField(max_length=30, null=True, verbose_name='lot_no.')),
                ('terms', models.CharField(choices=[('Cash', 'Cash'), ('1 Year', '1 Year'), ('2 Years', '2 Years'), ('3 Years', '3 Years'), ('Full Down', 'Full Down'), ('Reservation', 'Reservation')], max_length=30, null=True, verbose_name='termsofpayment')),
                ('fullname', models.CharField(max_length=99, null=True, verbose_name='fullname')),
                ('birth', models.DateField(null=True, verbose_name='birth')),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=30, null=True, verbose_name='gender')),
                ('contacts', models.CharField(max_length=11, null=True, verbose_name='contacts')),
                ('address', models.CharField(max_length=99, null=True, verbose_name='address')),
                ('email', models.EmailField(max_length=99, null=True, verbose_name='email')),
            ],
        ),
        migrations.CreateModel(
            name='InquiryFormModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_type', models.CharField(choices=[('Lawn Lot', 'Lawn Lot'), ('Mausoleum', 'Mausoleum'), ('Niche', 'Niche'), ('Apartment Type', 'Apartment Type')], max_length=30, verbose_name='lot_type')),
                ('phase', models.CharField(max_length=30, verbose_name='phase')),
                ('block', models.CharField(max_length=30, verbose_name='block')),
                ('lotno', models.CharField(max_length=30, verbose_name='lot_no.')),
                ('terms', models.CharField(choices=[('Cash', 'Cash'), ('1 Year', '1 Year'), ('2 Years', '2 Years'), ('3 Years', '3 Years'), ('Full Down', 'Full Down'), ('Reservation', 'Reservation')], max_length=30, verbose_name='termsofpayment')),
                ('fullname', models.CharField(max_length=99, verbose_name='fullname')),
                ('birth', models.DateField(null=True, verbose_name='birth')),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=30, null=True, verbose_name='gender')),
                ('contacts', models.CharField(max_length=11, verbose_name='contacts')),
                ('address', models.CharField(max_length=99, verbose_name='address')),
                ('email', models.EmailField(max_length=99, verbose_name='email')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(choices=[('Lawn Lot', 'Lawn Lot'), ('Mausoleum', 'Mausoleum'), ('Niche', 'Niche'), ('Apartment', 'Apartment')], max_length=50, null=True, verbose_name='lot')),
                ('phase', models.CharField(max_length=200, null=True, verbose_name='phase')),
                ('block', models.CharField(max_length=30, null=True, verbose_name='block')),
                ('lotno', models.CharField(max_length=30, null=True, verbose_name='lot_no.')),
                ('latitude', models.CharField(max_length=200, null=True, verbose_name='latitude.')),
                ('longitude', models.CharField(max_length=200, null=True, verbose_name='longitude.')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_client', models.BooleanField(default=False, verbose_name='Is client')),
                ('is_clerk1', models.BooleanField(default=False, verbose_name='Is clerk1')),
                ('is_clerk2', models.BooleanField(default=False, verbose_name='Is clerk2')),
                ('is_clerk3', models.BooleanField(default=False, verbose_name='Is clerk3')),
                ('birth', models.DateField(null=True, verbose_name='birth')),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=30, null=True, verbose_name='gender')),
                ('contacts', models.CharField(max_length=11, null=True, verbose_name='contacts')),
                ('address', models.CharField(max_length=99, null=True, verbose_name='address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('1 Year', '1 Year'), ('2 Years', '2 Years'), ('3 Years', '3 Years'), ('Full Down', 'Full Down'), ('Reservation', 'Reservation')], max_length=50, null=True, verbose_name='terms')),
                ('pay', models.FloatField(blank=True, default=None, null=True, verbose_name='pay')),
                ('balance', models.FloatField(blank=True, default=None, null=True, verbose_name='balance')),
                ('paid_date', models.DateField(blank=True, default=None, null=True, verbose_name='paid date')),
                ('status', models.CharField(blank=True, choices=[('Fully Paid', 'Fully Paid'), ('Partially Paid', 'Partially Paid')], default=None, max_length=200, null=True, verbose_name='status')),
                ('due_date', models.DateField(blank=True, default=None, null=True, verbose_name='due date')),
                ('customer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='customer')),
                ('product', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='THESISAPP.product', verbose_name='product')),
            ],
        ),
        migrations.CreateModel(
            name='LotOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('1 Year', '1 Year'), ('2 Years', '2 Years'), ('3 Years', '3 Years'), ('Full Down', 'Full Down'), ('Reservation', 'Reservation')], max_length=50, null=True, verbose_name='terms')),
                ('pay', models.FloatField(blank=True, default=None, null=True, verbose_name='pay')),
                ('balance', models.FloatField(blank=True, default=None, null=True, verbose_name='balance')),
                ('paid_date', models.DateField(blank=True, default=None, null=True, verbose_name='paid date')),
                ('status', models.CharField(blank=True, choices=[('Fully Paid', 'Fully Paid'), ('Partially Paid', 'Partially Paid')], default=None, max_length=200, null=True, verbose_name='status')),
                ('due_date', models.DateField(blank=True, default=None, null=True, verbose_name='due date')),
                ('customer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='customer')),
                ('product', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='THESISAPP.product', verbose_name='product')),
            ],
        ),
        migrations.CreateModel(
            name='Deads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deceased', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='deceased.')),
                ('born', models.DateField(blank=True, default=None, null=True, verbose_name='born.')),
                ('died', models.DateField(blank=True, default=None, null=True, verbose_name='died.')),
                ('owner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='THESISAPP.lotorder', verbose_name='owner')),
            ],
        ),
    ]
